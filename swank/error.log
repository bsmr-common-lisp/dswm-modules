Condition SB-KERNEL:PARSE-UNKNOWN-TYPE was signalled.
0: (SB-DEBUG::MAP-BACKTRACE
    #<CLOSURE (LAMBDA # :IN SB-DEBUG:BACKTRACE) {1008C920AB}>
    :START
    0
    :COUNT
    100)
1: (SB-DEBUG:BACKTRACE 100 #<SB-IMPL::STRING-OUTPUT-STREAM {1008C91FA3}>)
2: (DSWM:BACKTRACE-STRING)
3: (DSWM::PERFORM-TOP-LEVEL-ERROR-ACTION
    #<SB-KERNEL:PARSE-UNKNOWN-TYPE {1008C8ECF3}>)
4: (SIGNAL SB-KERNEL:PARSE-UNKNOWN-TYPE :SPECIFIER LCONS)
5: (SB-KERNEL:VALUES-SPECIFIER-TYPE LCONS)
6: (SB-KERNEL:SPECIFIER-TYPE LCONS)
7: ((LAMBDA (#:G688) :IN #:!LATE-TYPE-COLD-INIT) (OR NULL LCONS FUNCTION))
8: (SB-KERNEL:VALUES-SPECIFIER-TYPE (OR NULL LCONS FUNCTION))
9: (SB-KERNEL:SPECIFIER-TYPE (OR NULL LCONS FUNCTION))
10: (SUBTYPEP (OR NULL LCONS FUNCTION) FIXNUM #<unused argument>)
11: (SB-KERNEL::STRUCTURE-RAW-SLOT-DATA (OR NULL LCONS FUNCTION))
12: (SB-KERNEL::ALLOCATE-1-SLOT
     #<SB-KERNEL:DEFSTRUCT-DESCRIPTION LCONS>
     #<SB-KERNEL:DEFSTRUCT-SLOT-DESCRIPTION %CDR>)
13: (SB-KERNEL::PARSE-DEFSTRUCT-NAME-AND-OPTIONS-AND-SLOT-DESCRIPTIONS
     (LCONS (:CONSTRUCTOR %LCONS (CAR %CDR)) (:PREDICATE LCONS?))
     #<unavailable argument>)
14: ((LAMBDA (#:WHOLE84292 #:ENVIRONMENT84293)
       :IN
       "/tmp/sbcl/trunk/src/sbcl-1.0.57/src/cold/compile-cold-sbcl.lisp")
     (DEFSTRUCT (LCONS (:CONSTRUCTOR %LCONS (CAR %CDR)) (:PREDICATE LCONS?))
       CAR
       (%CDR NIL :TYPE (OR NULL LCONS FUNCTION))
       (FORCED? NIL))
     #<unavailable argument>)
15: (MACROEXPAND-1
     (DEFSTRUCT (LCONS (:CONSTRUCTOR %LCONS (CAR %CDR)) (:PREDICATE LCONS?))
       CAR
       (%CDR NIL :TYPE (OR NULL LCONS FUNCTION))
       (FORCED? NIL))
     #<NULL-LEXENV>)
16: (SB-C::PREPROCESSOR-MACROEXPAND-1
     (DEFSTRUCT (LCONS (:CONSTRUCTOR %LCONS (CAR %CDR)) (:PREDICATE LCONS?))
       CAR
       (%CDR NIL :TYPE (OR NULL LCONS FUNCTION))
       (FORCED? NIL)))
17: ((FLET SB-C::DEFAULT-PROCESSOR :IN SB-C::PROCESS-TOPLEVEL-FORM)
     (DEFSTRUCT (LCONS (:CONSTRUCTOR %LCONS (CAR %CDR)) (:PREDICATE LCONS?))
       CAR
       (%CDR NIL :TYPE (OR NULL LCONS FUNCTION))
       (FORCED? NIL)))
18: (SB-C::PROCESS-TOPLEVEL-FORM
     (DEFSTRUCT (LCONS (:CONSTRUCTOR %LCONS (CAR %CDR)) (:PREDICATE LCONS?))
       CAR
       (%CDR NIL :TYPE (OR NULL LCONS FUNCTION))
       (FORCED? NIL))
     (SB-C::ORIGINAL-SOURCE-START 0 345)
     NIL)
19: (SB-C::SUB-SUB-COMPILE-FILE #<SB-C::SOURCE-INFO >)
20: ((LAMBDA () :IN SB-C::SUB-COMPILE-FILE))
21: ((FLET SB-C::WITH-IT :IN SB-C::%WITH-COMPILATION-UNIT))
22: (SB-C::SUB-COMPILE-FILE #<SB-C::SOURCE-INFO >)
23: (COMPILE-FILE
     #P"/home/cosmonaut/dev/dss/dswm-modules/swank/swank.lisp"
     :OUTPUT-FILE
     #P"/home/cosmonaut/.swank/fasl/sbcl-1.0.57-linux-x86-64/swank.fasl"
     :VERBOSE
     T
     :PRINT
     NIL
     :EXTERNAL-FORMAT
     :DEFAULT
     :TRACE-FILE
     NIL
     :BLOCK-COMPILE
     NIL
     :EMIT-CFASL
     NIL)
24: (SWANK-LOADER::COMPILE-FILES
     (#P"/home/cosmonaut/dev/dss/dswm-modules/swank/swank-backend.lisp"
      #P"/home/cosmonaut/dev/dss/dswm-modules/swank/swank-source-path-parser.lisp"
      #P"/home/cosmonaut/dev/dss/dswm-modules/swank/swank-source-file-cache.lisp"
      #P"/home/cosmonaut/dev/dss/dswm-modules/swank/swank-sbcl.lisp"
      #P"/home/cosmonaut/dev/dss/dswm-modules/swank/swank-gray.lisp"
      #P"/home/cosmonaut/dev/dss/dswm-modules/swank/swank-match.lisp"
      #P"/home/cosmonaut/dev/dss/dswm-modules/swank/swank-rpc.lisp"
      #P"/home/cosmonaut/dev/dss/dswm-modules/swank/swank.lisp"
      #P"/home/cosmonaut/dev/dss/dswm-modules/swank/swank-dswm.lisp")
     #P"/home/cosmonaut/.swank/fasl/sbcl-1.0.57-linux-x86-64/"
     T)
25: (SWANK-LOADER::LOAD-SWANK :SRC-DIR NIL :FASL-DIR NIL)
26: (SWANK-LOADER:INIT :DELETE NIL :RELOAD NIL :LOAD-CONTRIBS NIL :SETUP T)
27: ((SB-PCL::EMF ASDF:PERFORM)
     #<unavailable argument>
     #<unavailable argument>
     #<ASDF:LOAD-OP (:VERBOSE NIL) {1004FB4443}>
     #<SWANK-LOADER::SWANK-LOADER-FILE "swank" "swank-loader">)
28: ((SB-PCL::FAST-METHOD ASDF::PERFORM-WITH-RESTARTS
      (ASDF:LOAD-OP ASDF:CL-SOURCE-FILE))
     #<unavailable argument>
     #S(SB-PCL::FAST-METHOD-CALL
        :FUNCTION #<FUNCTION #>
        :PV NIL
        :NEXT-METHOD-CALL NIL
        :ARG-INFO (2))
     #<ASDF:LOAD-OP (:VERBOSE NIL) {1004FB4443}>
     #<SWANK-LOADER::SWANK-LOADER-FILE "swank" "swank-loader">)
29: ((SB-PCL::FAST-METHOD ASDF::PERFORM-WITH-RESTARTS :AROUND (T T))
     #<unavailable argument>
     #S(SB-PCL::FAST-METHOD-CALL
        :FUNCTION #<FUNCTION #>
        :PV NIL
        :NEXT-METHOD-CALL #S(SB-PCL::FAST-METHOD-CALL
                             :FUNCTION #
                             :PV NIL
                             :NEXT-METHOD-CALL NIL
                             :ARG-INFO (2))
        :ARG-INFO (2))
     #<ASDF:LOAD-OP (:VERBOSE NIL) {1004FB4443}>
     #<SWANK-LOADER::SWANK-LOADER-FILE "swank" "swank-loader">)
30: ((LAMBDA () :IN ASDF::PERFORM-PLAN))
31: ((FLET SB-THREAD::WITH-RECURSIVE-LOCK-THUNK :IN SB-C::%WITH-COMPILATION-UNIT))
32: ((FLET #:WITHOUT-INTERRUPTS-BODY-89246 :IN SB-THREAD::CALL-WITH-RECURSIVE-LOCK))
33: (SB-THREAD::CALL-WITH-RECURSIVE-LOCK
     #<CLOSURE (FLET SB-THREAD::WITH-RECURSIVE-LOCK-THUNK :IN SB-C::%WITH-COMPILATION-UNIT)
       {7FFFF6B0670B}>
     #<SB-THREAD:MUTEX "World Lock"
         owner: #<SB-THREAD:THREAD "main thread" RUNNING {1003920C43}>>)
34: ((FLET SB-C::WITH-IT :IN SB-C::%WITH-COMPILATION-UNIT))
35: ((SB-PCL::FAST-METHOD ASDF::PERFORM-PLAN (LIST))
     #<unused argument>
     #<unused argument>
     ((#1=#<ASDF:COMPILE-OP (:VERBOSE NIL) {1005066963}>
       . #2=#<SWANK-LOADER::SWANK-LOADER-FILE #3="swank" "swank-loader">)
      (#1# . #4=#<ASDF:SYSTEM #3#>)
      (#5=#<ASDF:LOAD-OP (:VERBOSE NIL) {1004FB4443}> . #2#) (#5# . #4#)))
36: ((LAMBDA () :IN ASDF:OPERATE))
37: (ASDF::CALL-WITH-SYSTEM-DEFINITIONS
     #<CLOSURE (LAMBDA # :IN ASDF:OPERATE) {1004FB3F5B}>)
38: ((SB-PCL::FAST-METHOD ASDF:OPERATE (T T))
     #<unused argument>
     #<unused argument>
     ASDF:LOAD-OP
     #<ASDF:SYSTEM "swank">
     :VERBOSE
     NIL)
39: ((SB-PCL::EMF ASDF:OPERATE)
     #<unused argument>
     #<unused argument>
     ASDF:LOAD-OP
     #<ASDF:SYSTEM "swank">
     :VERBOSE
     NIL)
40: (ASDF::MODULE-PROVIDE-ASDF "swank")
41: ((LAMBDA (#:G50542) :IN REQUIRE) ASDF::MODULE-PROVIDE-ASDF)
42: (SB-IMPL::%MAP-FOR-EFFECT-ARITY-1
     #<CLOSURE (LAMBDA # :IN REQUIRE) {1004ED105B}>
     (ASDF::MODULE-PROVIDE-ASDF SB-IMPL::MODULE-PROVIDE-CONTRIB))
43: (REQUIRE "swank" NIL)
44: (DSWM:LOAD-MODULE "swank")
45: (DSWM::CALL-INTERACTIVELY
     "load-module"
     #S(DSWM::ARGUMENT-LINE :STRING "load-module" :START 12))
46: (DSWM::EVAL-COMMAND "load-module" T)
47: (DSWM::COLON NIL)
48: (DSWM::CALL-INTERACTIVELY
     "colon"
     #S(DSWM::ARGUMENT-LINE :STRING "colon" :START 6))
49: (DSWM::EVAL-COMMAND "colon" T)
50: ((LABELS #:G302 :IN "/home/cosmonaut/dev/dss/dswm/events.lisp")
     :CODE
     44
     :STATE
     20)
51: (DSWM::HANDLE-EVENT
     :DISPLAY
     #<XLIB:DISPLAY :2 (The X.Org Foundation R11202000)>
     :EVENT-KEY
     :KEY-PRESS
     :EVENT-CODE
     2
     :SEND-EVENT-P
     NIL
     :CODE
     44
     :SEQUENCE
     565
     :TIME
     490097244
     :ROOT
     #<XLIB:WINDOW :2 142>
     :WINDOW
     #<XLIB:WINDOW :2 200002>
     :EVENT-WINDOW
     #<XLIB:WINDOW :2 200002>
     :CHILD
     NIL
     :ROOT-X
     320
     :ROOT-Y
     240
     :X
     320
     :Y
     240
     :STATE
     20
     :SAME-SCREEN-P
     T)
52: ((FLET SB-THREAD::WITH-RECURSIVE-LOCK-THUNK :IN XLIB:PROCESS-EVENT))
53: ((FLET #:WITHOUT-INTERRUPTS-BODY-89246 :IN SB-THREAD::CALL-WITH-RECURSIVE-LOCK))
54: (SB-THREAD::CALL-WITH-RECURSIVE-LOCK
     #<CLOSURE (FLET SB-THREAD::WITH-RECURSIVE-LOCK-THUNK :IN XLIB:PROCESS-EVENT)
       {7FFFF6B079BB}>
     #<SB-THREAD:MUTEX "CLX Event Lock"
         owner: #<SB-THREAD:THREAD "main thread" RUNNING {1003920C43}>>)
55: (XLIB:PROCESS-EVENT
     #<XLIB:DISPLAY :2 (The X.Org Foundation R11202000)>
     :HANDLER
     #<FUNCTION DSWM::HANDLE-EVENT>
     :TIMEOUT
     NIL
     :PEEK-P
     NIL
     :DISCARD-P
     NIL
     :FORCE-OUTPUT-P
     T)
56: (DSWM::DSWM-INTERNAL-LOOP)
57: (DSWM::DSWM-INTERNAL ":2")
58: (DSWM:DSWM ":2")
59: ((LAMBDA () :IN "/home/cosmonaut/dev/dss/dswm/make-image.lisp"))
60: ((FLET #:WITHOUT-INTERRUPTS-BODY-236922 :IN SB-EXT:SAVE-LISP-AND-DIE))
61: ((LABELS SB-IMPL::RESTART-LISP :IN SB-EXT:SAVE-LISP-AND-DIE))

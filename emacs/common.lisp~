

(defvar *emacs-command* "emacs")
(defvar *emacs-client-command* "emacsclient")

(defvar *emacs-server-instances* '("default"))

;; emacs server start-stop
(defvar *emacs-start-server* "emacs --daemon")
(defvar *emacs-stop-server* "emacsclient -e '(kill-emacs)'")
(defvar *emacs-save-stop-server* "emacsclient -e '(client-save-kill-emacs)'")

(defun emacs-server-start (&key servername)
  (if-not-null servername
   (run-shell-command (concat *emacs-start-server* "=" servername))
   (dolist (i *emacs-server-instances*)
     (run-shell-command (concat *emacs-start-server* "=" i)))))

(defun emacs-server-stop (&key servernames save-p)
  (if-not-null servername
   (if-not-null save-p
    (dolist (i servernames)
      (run-shell-command (concat *emacs-save-stop-server* " --socket-name=" i)))
    (dolist (i servernames)
      (run-shell-command (concat *emacs-stop-server* " --socket-name=" i))))
   (dolist (i *emacs-server-instances*)
     (run-shell-command (concat *emacs-stop-server* " --socket-name=" i)))))



(defun e-call (&rest body)
  "Call from emacsclient to emacs daemon to run some command"
  (run-shell-command
   (eval (append
	  (list 'concat *emacs-client-command* " " "-e" " '")
	  body '("'"))) t)))

;; (defun e-call-open-client (&rest body)
;; FIXME: freezing
;;   "Call from emacsclient to emacs daemon to run some command"
;;   (run-shell-command
;;    (eval (append
;; 	  (list 'concat *emacs-client-command* " " "-c" " " "-e" " '")
;; 	  body '("'"))) t)))

;;; client
